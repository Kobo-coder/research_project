from manim import *
import random as rand


def generate_edge_config(neg_edges):
    edge_config = {}
    for e in neg_edges:
        edge_config[e] = {"stroke_color": RED}
    return edge_config

class BroadOverview(Scene):

    def construct(self):
        num_of_vertices = 52
        vertices = [v for v in range(1, num_of_vertices+1)]

        edges = [
            (1, 2), (1, 3), (3, 4), (2, 9), (4, 5), (5, 7), (5, 13), (5, 19), (5, 25), (6, 7), (7, 11), (7, 13), (7,9), (8, 9), (8, 20), (9,10),
            (10, 12), (11, 13), (12, 16), (13, 16), (11,14), (14, 15), (15, 17), (16, 18), (17, 18), (18, 19),
            (20,21), (21,22), (21,23), (23,24), (23, 25), (23,29), (25, 29), (25, 26), (26, 27), (27, 28),(25, 30), (27, 31), (29, 30),
            (30, 32), (30, 33), (31, 33), (32, 34),(31, 37), (33, 34), (34, 46), (34, 41), (34, 43),(35, 44), (36, 37), (36, 48),(37, 38), (38, 40), (38, 39),
            (40, 49), (41,42), (41, 44), (42, 43), (43, 44), (44, 45), (45, 46), (46, 47), (47, 50), (48, 49), (48, 50), (48, 51), (50, 51), (50, 52), (51, 52)
        ]
        num_of_edges = len(edges)

        pos_edges = []
        neg_edges = []

        layout = {
            1: [-6, 2.5, 0],
            2: [-6.5, 1.5, 0],
            3: [-5, 2, 0],
            4: [-3, 2.5, 0],
            5: [-2.5, 1, 0],
            6: [-3.5, 1.5, 0],
            7: [-4, 0, 0],
            8: [-5.5, 1, 0],
            9: [-5, 0.5, 0],
            10: [-6, -0.5, 0],
            11: [-4.5, -1, 0],
            12: [-5.5, -1.5, 0],
            13: [-3, 0, 0],
            14: [-4, -2, 0],
            15: [-3, -2.5, 0],
            16: [-2.5, -1.5, 0],
            17: [-1.5, -2, 0],
            18: [-1, -1, 0],
            19: [-1, 0.5, 0],
            20: [-1.5, 1.5, 0],
            21: [0, 2, 0],
            22: [-0.5, 2.5, 0],
            23: [1, 2, 0],
            24: [1, 2.8, 0],
            25: [0.5, 0.5, 0],
            26: [1, -0.5, 0],
            27: [1.5, -1.5, 0],
            28: [1, -2.5, 0],
            29: [2, 1, 0],
            30: [2.5, 0, 0],
            31: [2.5, -1.5, 0],
            32: [3.5, 2, 0],
            33: [3, 0, 0],
            34: [3.5, 1, 0],
            35: [3, 1.5, 0],
            36: [2, -1, 0],
            37: [3, -2, 0],
            38: [2, -2, 0],
            39: [1.5, -3, 0],
            40: [3.5, -2.5, 0],
            41: [4.5, 1.5, 0],
            42: [5, 2, 0],
            43: [5.5, 1, 0],
            44: [4.5, 0.5, 0],
            45: [5.5, 0, 0],
            46: [4, -0.5, 0],
            47: [4.5, -1.5, 0],
            48: [4, -2, 0],
            49: [3.5, -3, 0],
            50: [4.5, -2.5, 0],
            51: [6, -1.5, 0],
            52: [6, -2.5, 0]
        }

        for e in edges:
            if rand.choices([0,1], [0.75, 0.25], k = 1)[0]:
                neg_edges.append(e)
            else:
                pos_edges.append(e)

        graph = Graph(vertices, pos_edges+neg_edges, edge_config=generate_edge_config(neg_edges), layout=layout)


        self.play(Create(graph))
        self.wait(5)